elasticsearch:
  enabled: true
  clusterName: "test-elasticsearch"
  replicas: 1
  minimumMasterNodes: 1
  httpPort: 9200
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
  service:
    type: NodePort
    nodePort: 30920
  readinessProbe:
    failureThreshold: 6
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 5
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 8Gi

kibana:
  enabled: true
  elasticsearchHosts: "http://test-elasticsearch-master:9200"
  service:
    type: NodePort
    port: 5601
    nodePort: 30032
  ingress:
    enabled: false
    path: /
    annotations:
      kubernetes.io/ingress.class: "nginx"

apmserver:
  enabled: true
  service:
    type: NodePort
    port: 8200
    nodePort: 30821
  apmConfig:
    apm-server.yml: |
      apm-server:
        host: "0.0.0.0:8200"
      kibana:
        enabled: true
        hosts: "http://test-kibana:5601"
        ssl.enabled: false
      setup.template.enabled: true
      logging.to_files: false
      output.elasticsearch:
        hosts: ["http://test-elasticsearch-master:9200"]
        enabled: true

rabbitmq:
  enabled: true
  rabbitmq:
    username: gib_admin
    password: c52ac178cf2505252358891a8ee6c509
    erlangCookie: "ERLANGCOOKIE"
  service:
    type: NodePort
    port: 5672
    managerPort: 15672
    nodePort: 30031
  ingress:
    enabled: true
    path: /
    annotations:
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/force-ssl-redirect: 'false'
      ingress.kubernetes.io/ssl-redirect: 'false'
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'false'
      nginx.ingress.kubernetes.io/ssl-redirect: 'false'
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      kubernetes.io/tls-acme: "false"
    hostName: rabbitmq.test